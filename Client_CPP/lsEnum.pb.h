// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsEnum.proto

#ifndef PROTOBUF_lsEnum_2eproto__INCLUDED
#define PROTOBUF_lsEnum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace lspb {
}  // namespace lspb

namespace lspb {

namespace protobuf_lsEnum_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_lsEnum_2eproto

enum ModuleId {
  UnknownModel = 0,
  Game = 1,
  ModuleId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ModuleId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ModuleId_IsValid(int value);
const ModuleId ModuleId_MIN = UnknownModel;
const ModuleId ModuleId_MAX = Game;
const int ModuleId_ARRAYSIZE = ModuleId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModuleId_descriptor();
inline const ::std::string& ModuleId_Name(ModuleId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModuleId_descriptor(), value);
}
inline bool ModuleId_Parse(
    const ::std::string& name, ModuleId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModuleId>(
    ModuleId_descriptor(), name, value);
}
enum Result {
  success = 0,
  err = 1,
  errNoMethod = 2,
  errNulMsg = 3,
  Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Result_IsValid(int value);
const Result Result_MIN = success;
const Result Result_MAX = errNulMsg;
const int Result_ARRAYSIZE = Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Result_descriptor();
inline const ::std::string& Result_Name(Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Result_descriptor(), value);
}
inline bool Result_Parse(
    const ::std::string& name, Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Result>(
    Result_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace lspb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::lspb::ModuleId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lspb::ModuleId>() {
  return ::lspb::ModuleId_descriptor();
}
template <> struct is_proto_enum< ::lspb::Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lspb::Result>() {
  return ::lspb::Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lsEnum_2eproto__INCLUDED
