// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: srvRes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lspb {

  /// <summary>Holder for reflection information generated from srvRes.proto</summary>
  public static partial class SrvResReflection {

    #region Descriptor
    /// <summary>File descriptor for srvRes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SrvResReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzcnZSZXMucHJvdG8SBGxzcGIaDGxzRW51bS5wcm90bxoPZ2FtZVByb3Rv",
            "LnByb3RvIoQBCgZTcnZSZXMSIgoIbWV0aG9kSWQYASABKA4yEC5sc3BiLlNy",
            "dk1zZ1R5cGUSHAoGcmVzdWx0GAIgASgOMgwubHNwYi5SZXN1bHQSDgoGZXJy",
            "U3RyGAMgASgJEigKDHNydkVudGVyR2FtZRgEIAEoCzISLmxzcGIuU3J2RW50",
            "ZXJHYW1lKjYKClNydk1zZ1R5cGUSEwoPZXJyb3JDbGllbnRUeXBlEAASEwoP",
            "c2VydmVyRW50ZXJHYW1lEGVCEgoQb3JnLmJyby5sc3Nydi5wYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lspb.LsEnumReflection.Descriptor, global::Lspb.GameProtoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Lspb.SrvMsgType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lspb.SrvRes), global::Lspb.SrvRes.Parser, new[]{ "MethodId", "Result", "ErrStr", "SrvEnterGame" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SrvMsgType {
    /// <summary>
    ///* default 
    /// </summary>
    [pbr::OriginalName("errorClientType")] ErrorClientType = 0,
    /// <summary>
    ///* 进入游戏 
    /// </summary>
    [pbr::OriginalName("serverEnterGame")] ServerEnterGame = 101,
  }

  #endregion

  #region Messages
  /// <summary>
  ///* 所有下行请求都是serverResponse，服务器会传递具体内容的标示methodId，客户端根据methodId进行处理 
  /// </summary>
  public sealed partial class SrvRes : pb::IMessage<SrvRes> {
    private static readonly pb::MessageParser<SrvRes> _parser = new pb::MessageParser<SrvRes>(() => new SrvRes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SrvRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lspb.SrvResReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes(SrvRes other) : this() {
      methodId_ = other.methodId_;
      result_ = other.result_;
      errStr_ = other.errStr_;
      SrvEnterGame = other.srvEnterGame_ != null ? other.SrvEnterGame.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SrvRes Clone() {
      return new SrvRes(this);
    }

    /// <summary>Field number for the "methodId" field.</summary>
    public const int MethodIdFieldNumber = 1;
    private global::Lspb.SrvMsgType methodId_ = 0;
    /// <summary>
    ///* 返回方法名 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.SrvMsgType MethodId {
      get { return methodId_; }
      set {
        methodId_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Lspb.Result result_ = 0;
    /// <summary>
    ///* 返回码，包含success和错误码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "errStr" field.</summary>
    public const int ErrStrFieldNumber = 3;
    private string errStr_ = "";
    /// <summary>
    ///* 错误展示字段，如果result不为0，则取该字段给用户展示 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrStr {
      get { return errStr_; }
      set {
        errStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "srvEnterGame" field.</summary>
    public const int SrvEnterGameFieldNumber = 4;
    private global::Lspb.SrvEnterGame srvEnterGame_;
    /// <summary>
    ///* 具体返回内容proto 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Lspb.SrvEnterGame SrvEnterGame {
      get { return srvEnterGame_; }
      set {
        srvEnterGame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SrvRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SrvRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodId != other.MethodId) return false;
      if (Result != other.Result) return false;
      if (ErrStr != other.ErrStr) return false;
      if (!object.Equals(SrvEnterGame, other.SrvEnterGame)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodId != 0) hash ^= MethodId.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ErrStr.Length != 0) hash ^= ErrStr.GetHashCode();
      if (srvEnterGame_ != null) hash ^= SrvEnterGame.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MethodId);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (ErrStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrStr);
      }
      if (srvEnterGame_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SrvEnterGame);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MethodId);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ErrStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrStr);
      }
      if (srvEnterGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SrvEnterGame);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SrvRes other) {
      if (other == null) {
        return;
      }
      if (other.MethodId != 0) {
        MethodId = other.MethodId;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ErrStr.Length != 0) {
        ErrStr = other.ErrStr;
      }
      if (other.srvEnterGame_ != null) {
        if (srvEnterGame_ == null) {
          srvEnterGame_ = new global::Lspb.SrvEnterGame();
        }
        SrvEnterGame.MergeFrom(other.SrvEnterGame);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            methodId_ = (global::Lspb.SrvMsgType) input.ReadEnum();
            break;
          }
          case 16: {
            result_ = (global::Lspb.Result) input.ReadEnum();
            break;
          }
          case 26: {
            ErrStr = input.ReadString();
            break;
          }
          case 34: {
            if (srvEnterGame_ == null) {
              srvEnterGame_ = new global::Lspb.SrvEnterGame();
            }
            input.ReadMessage(srvEnterGame_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
